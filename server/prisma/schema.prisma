// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
id String @unique
correo String
password String
rol Rol
nombre String
apellido1 String
apellido2 String
idRestaurante Int
restaurante Restaurante @relation(fields:[idRestaurante], references:[id])
comandas Comanda[]
deleted Boolean @default(false)
}

model Categoria {
id Int      @id @default(autoincrement())
nombre String
productos Producto[]
}

model Producto {
id Int      @id @default(autoincrement())
nombre String
descripcion String
precio Decimal  @db.Decimal(10, 2)
estado Boolean @default(true)
categoria Categoria @relation(fields:[idCategoria], references:[id])
idCategoria Int
ingredientes Ingrediente[]
restaurantes Restaurante[]
lineaComanda LineaComanda[]
deleted Boolean @default(false)
}

model Ingrediente {
id Int      @id @default(autoincrement())
idProducto Int
nombre String
estado Boolean @default(true)
producto Producto @relation(fields:[idProducto], references:[id])
deleted Boolean @default(false)
}

model Restaurante {
id Int      @id @default(autoincrement())
nombre String
ubicacion String
productos Producto[]
mesas Mesa[]
usuarios Usuario[]
comandas Comanda[]
}

model Mesa {
id Int      @id @default(autoincrement())
idRestaurante Int
capacidad Int
estado EstadoComanda
restaurante Restaurante @relation(fields:[idRestaurante], references:[id])
comandas Comanda[]
}

model Comanda {
id Int      @id @default(autoincrement())
idMesa Int?
idUsuario String
idRestaurante Int
estado EstadoComanda
direccion String
subTotal Decimal @db.Decimal(10, 2)
impuesto Decimal @db.Decimal(10, 2)
totalPagar Decimal @db.Decimal(10, 2)
fechaComanda  DateTime            @default(now())
usuario Usuario @relation(fields:[idUsuario], references:[id])
restaurante Restaurante @relation(fields:[idRestaurante], references:[id])
mesa Mesa? @relation(fields:[idMesa], references:[id])
lineaComandas LineaComanda[]
detallePago DetallePago[]
}

model LineaComanda {
id Int      @id @default(autoincrement())
idComanda Int
idProducto Int
cantidad  Int
notas String
comanda Comanda @relation(fields:[idComanda], references:[id])
producto Producto @relation(fields:[idProducto], references:[id])
}

model DetallePago{
  id Int       @default(autoincrement())
  idTipo Int
  monto Decimal @db.Decimal(10, 2)  
  idComanda Int @unique
  comanda Comanda @relation(fields: [idComanda], references: [id])
  TipoPago TipoPago @relation(fields: [idTipo], references: [id])
  @@id([id, idTipo])
}

model TipoPago{
  id Int      @id @default(autoincrement())
  nombre String
  detallePagos DetallePago[]
}

enum Rol{
  administrador
  cliente
  mesero
}
enum EstadoComanda{
  registrada
  pendiente
  enProceso
  entregada
  porPagar
  pagada
}
enum EstadosMesas{
  reservada
  ocupada
}

