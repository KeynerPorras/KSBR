// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
id String @unique
rol Rol
idRestaurante Int
restaurante Restaurante @relation(fields:[idRestaurante], references:[id])
comandas Comanda[]
deleted Boolean @default(false)
}

model Categoria {
id Int      @id @default(autoincrement())
nombre String
productos Producto[]
}

model Producto {
id Int      @id @default(autoincrement())
nombre String
descripcion String
IdIngredientes Int
precio Decimal  @db.Decimal(10, 2)
estado Boolean @default(true)
categoria Categoria @relation(fields:[idCategoria], references:[id])
idCategoria Int
ingredientes Ingrediente[]
restaurantes Restaurante[]
lineaComanda LineaComanda[]
deleted Boolean @default(false)
}

model Ingrediente {
id Int      @id @default(autoincrement())
idProducto Int
nombre String
estado Boolean @default(true)
producto Producto @relation(fields:[idProducto], references:[id])
deleted Boolean @default(false)
}

model Restaurante {
id Int      @id @default(autoincrement())
productos Producto[]
mesas Mesa[]
usuarios Usuario[]
}

model Mesa {
id Int      @id @default(autoincrement())
idRestaurante Int
capacidad Int
Estado Boolean
restaurante Restaurante @relation(fields:[idRestaurante], references:[id])
comandas Comanda[]
}

model Comanda {
id Int      @id @default(autoincrement())
lineaComandas LineaComanda[]
idMesa Int?
idUsuario String
estado EstadoComanda
TipoPago TipoPago
usuario Usuario @relation(fields:[idUsuario], references:[id])
mesa Mesa? @relation(fields:[idMesa], references:[id])
}

model LineaComanda {
id Int      @id @default(autoincrement())
idComanda Int
idProducto Int
cantidad  Int
precio Decimal  @db.Decimal(10, 2)
notas String
comanda Comanda @relation(fields:[idComanda], references:[id])
producto Producto @relation(fields:[idProducto], references:[id])
}

enum Rol{
  administrador
  cliente
  mesero
}
enum EstadoComanda{
  registrada
  pendiente
  enProceso
  entregada
  porPagar
}
enum TipoPago{
  tarjeta
  efectivo
  ambas
}